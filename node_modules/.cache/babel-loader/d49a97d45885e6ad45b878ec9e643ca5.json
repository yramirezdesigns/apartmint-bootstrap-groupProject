{"ast":null,"code":"var _jsxFileName = \"/Users/yolandaramirez/apartmint-bootstrap/src/components/register/register.js\";\nimport React from \"react\";\nimport Modal from \"../registerModal/registerModal\";\nimport { Form, Button, ButtonToolbar, ButtonGroup, Col // Modal\n} from \"react-bootstrap\";\nimport \"./register.css\";\nimport Path from \"../Aparments/Apartments\";\nexport default class Login extends React.Component {\n  // handling the on click events for register and x button ------------- info------------\n  constructor(props, context) {\n    super(props, context);\n\n    this.showModal = () => {\n      this.setState({\n        isShowing: true\n      });\n      console.log(\"Hello\");\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        isShowing: false\n      });\n      console.log(\"Bye\");\n    };\n\n    this.state = {\n      isShowing: false\n    };\n  }\n\n  // handling the on click events for submit button ------------- info------------\n  constuctor() {\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  routeChange() {\n    let path = \"newPath\";\n    this.props.history.push(path);\n  } // ---------------------\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      className: \"mr-2\",\n      \"aria-label\": \"First group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"info\",\n      className: \"loginBut\",\n      onClick: e => this.showModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Register\"))), React.createElement(Modal, {\n      isShowing: this.state.isShowing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridfirstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      name: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Form.Control, {\n      type: \"firstName\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridlastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      name: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Form.Control, {\n      type: \"lastName\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"formGridAddress1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Form.Control, {\n      placeholder: \"1234 Main St\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGridAddress2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Address 2\"), React.createElement(Form.Control, {\n      placeholder: \"Apartment, studio, or floor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"City\"), React.createElement(Form.Control, {\n      as: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Bronx\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Brooklyn\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Manhattan\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Queens\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Staten Island\"))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"State\"), React.createElement(Form.Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"registerModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(Form.Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      id: \"landlordCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Landlord\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      id: \"tenantCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Tenant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.routeChange,\n      onClick: e => this.hideModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      className: \"mr-2\",\n      \"aria-label\": \"First group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"info\",\n      className: \"registerBut\",\n      onClick: e => this.hideModal(),\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"X\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/yolandaramirez/apartmint-bootstrap/src/components/register/register.js"],"names":["React","Modal","Form","Button","ButtonToolbar","ButtonGroup","Col","Path","Login","Component","constructor","props","context","showModal","setState","isShowing","console","log","hideModal","state","constuctor","routeChange","bind","path","history","push","render","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"../registerModal/registerModal\";\nimport {\n  Form,\n  Button,\n  ButtonToolbar,\n  ButtonGroup,\n  Col\n  // Modal\n} from \"react-bootstrap\";\nimport \"./register.css\";\nimport Path from \"../Aparments/Apartments\";\n\nexport default class Login extends React.Component {\n  // handling the on click events for register and x button ------------- info------------\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isShowing: false\n    };\n  }\n\n  showModal = () => {\n    this.setState({\n      isShowing: true\n    });\n\n    console.log(\"Hello\");\n  };\n\n  hideModal = () => {\n    this.setState({\n      isShowing: false\n    });\n\n    console.log(\"Bye\");\n  };\n  // handling the on click events for submit button ------------- info------------\n  constuctor() {\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  routeChange() {\n    let path = `newPath`;\n    this.props.history.push(path);\n  }\n\n  // ---------------------\n\n  render() {\n    return (\n      <div>\n        <ButtonToolbar>\n          <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\n            <Button\n              variant=\"info\"\n              className=\"loginBut\"\n              onClick={e => this.showModal()}\n            >\n              Register\n            </Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n        {/* <Button onClickHandler={e => this.showModal()} buttonText={\"Login\"} /> */}\n        <Modal isShowing={this.state.isShowing}>\n          <div>\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label className=\"registerModal\">Email</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label className=\"registerModal\" name=\"password\">\n                    Password\n                  </Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridfirstName\">\n                  <Form.Label className=\"registerModal\" name=\"firstName\">\n                    First Name\n                  </Form.Label>\n                  <Form.Control type=\"firstName\" placeholder=\"First Name\" />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridlastName\">\n                  <Form.Label className=\"registerModal\" name=\"lastName\">\n                    Last Name\n                  </Form.Label>\n                  <Form.Control type=\"lastName\" placeholder=\"Last Name\" />\n                </Form.Group>\n              </Form.Row>\n              <Form.Group controlId=\"formGridAddress1\">\n                <Form.Label className=\"registerModal\">Address</Form.Label>\n                <Form.Control placeholder=\"1234 Main St\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"formGridAddress2\">\n                <Form.Label className=\"registerModal\">Address 2</Form.Label>\n                <Form.Control placeholder=\"Apartment, studio, or floor\" />\n              </Form.Group>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label className=\"registerModal\">City</Form.Label>\n                  <Form.Control as=\"select\">\n                    <option>City</option>\n                    <option>Bronx</option>\n                    <option>Brooklyn</option>\n                    <option>Manhattan</option>\n                    <option>Queens</option>\n                    <option>Staten Island</option>\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label className=\"registerModal\">State</Form.Label>\n                  <Form.Control />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label className=\"registerModal\">Zip</Form.Label>\n                  <Form.Control />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group id=\"landlordCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Landlord\" />\n              </Form.Group>\n              <Form.Group id=\"tenantCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Tenant\" />\n              </Form.Group>\n\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={this.routeChange}\n                onClick={e => this.hideModal()}\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <br />\n          <ButtonToolbar>\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\n              <Button\n                variant=\"info\"\n                className=\"registerBut\"\n                onClick={e => this.hideModal()}\n                size=\"sm\"\n              >\n                X\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n          {/* <Buttons onClickHandler={e => this.hideModal()} buttonText={\"X\"} /> */}\n          <br />\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}